# Wireless access points
sudo iwlist scanning|less

# Connecting to s-video out, changing display resolution, connecting to projector or external display
xrandr
# Reset screen resolution if another program goofs it up
xrandr -s 1600x900
# http://forums.debian.net/viewtopic.php?f=10&t=40955
# Automatically turn on a second screen
xrandr --output VGA --auto
# Clone screens
xrandr --output VGA --same-as LVDS
# Extend screens
xrandr --output VGA --left-of LVDS

# Finding in directories beneath
# Find all files containing text 'NBMAX' and ending in .F90
find . | xargs grep NBMAX *.F90
# Find all files with 'cool' somewhere in the name
find . -name  *cool*
# Find all files ending in .html in current directory
find . -name *.html
# Find all files ending in .html in current directory and subdirectories
find . -name '*.html'

# View only files not ending in '.txt'
ls --ignore=*.txt

# Viewing active processes
top
# Sorting by memory
top -o %MEM
# Interactively
f
(navigate to %MEM)
s
q

# Changing sound settings
alsamixer

# Figure out which speaker is left and right
speaker-test -Dplug:front -c2 -t sine -f100
speaker-test --device plug:front --channels 2 --test sine --frequency 100 # long version

# Append last command to this text file
echo !! >> ~/Dropbox/how-to/cool-commands.txt
# This is useful if you want to run it as a shell script. You can also just save it to a shell script like this:
echo !! > my-script.sh

# Grepping
grep PHY unofficial-transcript-11-24-11.txt
grep ALLOCATE COORD *.F90
grep -Fxv -f DERIVT.F90 MODULE.F90 # subtract first file from second file
grep -Fx -f DERIVT.F90 MODULE.F90 # intersection of first file and second file
grep --fixed-strings --line-regexp --invert-match --file=DERIVT.F90 MODULE.F90 # long version
grep --recursive dveff *.f90
grep '=>' *.f90
grep --recursive *.mp3 .
grep Offenbach .
ls --recursive | grep kim *.f90
grep --ignore-case --recursive "kim_api" . --include=*.f90
grep --recursive "kim-str" .
time grep "hi"
ls /usr/bin | grep "csound"
nano | ls | grep "ann"
# Grepping raw strings without regular expressions
grep -F
grep --fixed-strings
git diff --word-diff | grep -F '[-[ ]-]{+[*]+}'

find | grep NBMAX *.F90

# View error messages in less by redirecting stderr to stdout
bash compile.sh 2>&1 | less
bash compile.sh 2>&1 >/dev/null | less
# http://stackoverflow.com/questions/2342826/how-to-pipe-stderr-and-not-stdout
# Send stderr to text file
bash env.sh 2> err_log.txt
# Send stdout and stderr to text file
bash env.sh &> full_log.txt

# Return all lines containing "kim_api" (case insensitive) and ending with .f90
grep -ir "kim_api" . --include=*.f90

# Rename all .png files by prepending 'digital_media_archive_assistant_' to the filename:
rename --no-act 's/^/digital_media_archive_assistant_/' *.png
# This would work also:
for i in *.png; do mv $i digital_media_archive_assistant_$i; done

# Rename all files starting with Ch so that they now end with .doc.
rename -nv 's/$/.doc/' Ch*
rename -v 's/$/.doc/' Ch*

# Rename files so that Cu becomes C
rename -nv 's/Cu/C/' Te_Na2Cu2Te.*
rename 's/Cu/C/' Te_Na2Cu2Te.*
# Te_Na2Cu2Te.001 renamed as Te_Na2C2Te.001

# From commandlinefu.com
rename 'y/ /_/' * # replace spaces with underscores
mv filename.{old,new} # Quick file rename

# Using the system dictionary:
grep -i '^s.*m.*b' /usr/share/dict/words # this is how samba was named
egrep -i "^[^aeiouy']{3}$" /usr/share/dict/words

# Debugging segfaults in C:
printf("Line %d reached.\n",__LINE__);//debug
# Debugging segfaults in Fortran:
print*,__FILE__,__LINE__

# GNU debugger (gdb) basics
gdb ./vc_forces_numer_deriv
r
bt
frame 2
info locals
info args
# Running gdb commands
gdb -ex 'set logging on' -ex 'run' iceweasel

# Disk usage:
du |sort --numeric-sort --reverse
du |sort -nr # quick version
du -k --max-depth=1 /home | sort -nr

mkvextract tracks movie5.mkv 2:audio_track.ac3
ls --almost-all --format=single-column
sudo chmod -R +rwx .mozilla
!! # repeat previous command

type rr # identify the kind of command rr is
type -a rr # print all the places that contain an executable named 'rr', including aliases, functions, and builtins.
# For example, type -a ls gives you both /bin/ls and whatever ls is aliased to, as it often is.
source .bashrc # make bash re-read modified .bashrc file
. .bashrc # make bash re-read modified .bashrc file
apt-cache search my-package # search apt packages for 'my-package', case insensitive
find ~ -type f -name "*.wma" -exec cp -n '{}' /home/nathaniel/wma-dump/ ';' # find all files ending in .wma and copy them to ~/wma-dump, not overwriting repeated files
cp -a ./.[a-zA-Z0-9]* ~/dotfiles_from_lucid_install_full/
sudo chown nathaniel: .xdvirc
cat precise.txt | grep root > to-chown.txt
cat fix_dotfile_permissions/to-chown-file-names.txt | xargs sudo chown nathaniel: # transfer ownership to nathaniel instead of root

# Using curl to download from the command line
curl --output /dev/null http://speedtest.wdc01.softlayer.com/downloads/test500.zip # test download speed
curl --continue-at - --remote-name 'url_for_file' # Download file, automatically with same name and ability to resume download
# Using wget to download from the command line
wget http://cdimage.debian.org/cdimage/release/current-live/i386/usb-hdd/debian-live-6.0.4-i386-lxde-desktop.img # simpler
wget --continue 'http://cdimage.debian.org/cdimage/release/current-live/i386/usb-hdd/debian-live-6.0.4-i386-lxde-desktop.img' # resume a partial download
# How to download a file without nesting it in a bunch of directories
wget --no-host-directories ~/Dropbox/UbuntuBackup/ 'http://www.google.com/calendar/ical/nbeaver%40hawk.iit.edu/private-487dd85b5f1553be9c2e1b4a1e29ae7f/basic.ics'
# Using wget to get a recursive (default to 5 links deep) local copy of a page.
wget --no-host-directories --recursive --convert-links --page-requisites 'http://www.cs.cmu.edu/afs/cs.cmu.edu/user/sleator/www/oddballs/oddballs-web/'
# Use wget to check for broken links in an html file
cat file.html | wget --no-check-certificate --spider -nv -F -i -
# Download a local copy of the weather into a specified directory
wget -p --convert-links -P ~/not_backed_up/weather-reports/chicago-weather/ 'http://forecast.weather.gov/MapClick.php?lat=41.8403395&lon=-87.61370110000001&site=all&smap=1&searchresult=Chicago%2C%20IL%2060616%2C%20USA'
wget --page-requisites --convert-links --directory-prefix '~/not_backed_up/weather-reports/chicago-weather/' 'http://forecast.weather.gov/MapClick.php?lat=41.8403395&lon=-87.61370110000001&site=all&smap=1&searchresult=Chicago%2C%20IL%2060616%2C%20USA'
# Choose output for wget
wget --no-host-directories 'http://www.google.com/calendar/ical/nbeaver%40hawk.iit.edu/private-487dd85b5f1553be9c2e1b4a1e29ae7f/basic.ics' --output-document ~/Dropbox/UbuntuBackup/basic.ics
# Get local copy of website
wget -E -H -k -K -p -e robots=off 'https://www.iit.edu/'
wget --adjust-extension --span-hosts --convert-links --backup-converted --page-requisites --execute robots=off 'https://www.iit.edu/'
# Check to see if the website is up beyond using something like ping.
wget --timeout=3 --tries=1 --spider --no-check-certificate http://marctenbosch.com/miegakure/
curl --head --silent --location "http://www.reddit.com/r/obscurantism"
# No redirects
curl --head --silent "http://www.reddit.com/r/obscurantism"
wget --timeout=3 --tries=1 --spider --no-check-certificate  --max-redirect=0 http://marctenbosch.com/miegakure/
# Download just the first level of linked files, and don't re-download them if they haven't been updated
wget --no-parent --no-host-directories --recursive --level=1 --convert-links --relative --timestamping http://bernhard-adams.com/IIT-phy412/
# Download from obnoxious user-agent filtering sites
# http://sparc86.wordpress.com/2009/04/08/wget-shows-http-error-403-forbidden/
wget -U firefox http://www.wideislandview.com/2009/07/recipe-no-fuss-rice-cooker-banana-bread/

echo blacklist mei > /etc/modprobe.d/mei.conf # avoid this error http://bbs.archlinux.org/viewtopic.php?id=133083-
# Also here: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/984088
# Should I run this?


for f in *.gsp # for every file ending in .gsp
do
    echo $f # display the filename
    hexdump -C $f > "${f%.*}.txt" # make a text hexdump
done

# Process control
ps aux |grep athena
pstree
vmstat

ps aux --sort=-%cpu # list processes using most CPU
ps aux --sort=-%mem # list processes using most memory

# What do the statuses in ps mean, e.g. Rl Sl S+ Sl+ in the STAT (status) field?
PROCESS STATE CODES
       Here are the different values that the s, stat and state output specifiers (header "STAT" or "S") will display to describe the state of a process:
       D    uninterruptible sleep (usually IO)
       R    running or runnable (on run queue)
       S    interruptible sleep (waiting for an event to complete)
       T    stopped, either by a job control signal or because it is being traced.
       W    paging (not valid since the 2.6.xx kernel)
       X    dead (should never be seen)
       Z    defunct ("zombie") process, terminated but not reaped by its parent.

       For BSD formats and when the stat keyword is used, additional characters may be displayed:
       <    high-priority (not nice to other users)
       N    low-priority (nice to other users)
       L    has pages locked into memory (for real-time and custom IO)
       s    is a session leader
       l    is multi-threaded (using CLONE_THREAD, like NPTL pthreads do)
       +    is in the foreground process group.


startx -- :1 # start x session

ls -lSrh # list biggest files
ls -l -S --reverse --human-readable # -l = long listing and -S = sort
ls -v1 # Show files one on each line and in numeric order instead of alphanumeric

lsof # display open files

# Sure ways to restart a wireless network
ping -c 4 google.com # ping 4 times
lspci | grep -i network
#03:00.0 Network controller: Realtek Semiconductor Co., Ltd. RTL8188CE 802.11b/g/n WiFi Adapter (rev 01)
modprobe --list | grep rtl
sudo modprobe --remove rtl8192ce
sudo modprobe rtl8192ce
ping -c 4 google.com

# Another method
sudo /etc/init.d/networking restart
sudo /etc/init.d/network-manager restart

# First, try Alt-F2 and xkill or Alt-F2 and gnome-terminal
# Restart X server
sudo service lightdm restart
# Magic SysRq key: rebooting when all other options fail
hold down Alt-SysRq, then type  r e i s u b, then enter and ctrl-alt-del


date --date='2 hours 22 minutes' +%r # The time 2 hours and 22 minutes from now, formatted with AM/PM
date --date='45 days after 9/11/2012' +%r
date -d "April 19, 2014 + 12 weeks"
# find number of days' difference between two dates
echo $(( ( $(date -d "09/07/2012" +%s) - $(date -d "07/05/2012" +%s) ) /(24 * 60 * 60 ) ))
# Standard American date
date +%m/%d/%Y
# Standard American date one week from now
date --date='next week' +%m/%d/%Y
date --date='7 days' +%m/%d/%Y

grep -r "string" . # recursively search all files for string

# search man pages
man --global-apropos "David MacKenzie" | grep "David MacKenzie" | wc -l # returns 55, last I checked. Number of manpages with lines mentioning David MacKenzie

# case-insensitive, find all commits where word 'rhubarb' was added or removed (pickaxe search)
git grep -i rhubarb $(git rev-list --all)

# search for commands and aliases named 'my-command'.
compgen -ac | grep my-command
# Note: -a is for aliases, -c is for commands

# Get wireshark working for non-root user
sudo apt-get install wireshark
sudo dpkg-reconfigure wireshark-common
sudo usermod --append --groups wireshark $USER
gnome-session-quit --logout --no-prompt

# Locate all files with a path or name containing 'file'
locate --ignore-case file
# Locate all files ending with '.cif'
locate *.cif
# Locate all base filenames starting with phys
locate -b phys*
# Locate using the ? for one or zero unknown letter, * for many unknown letters
locate *.htm?
# Udate the locate database
sudo updatedb
# TODO: find out when the last time the database was (successfully) updated.

# Make a tree using the Contex Free grammar image generator
/usr/bin/cfdg -s 500 /usr/share/doc/contextfree/examples/mtree.cfdg mtree.png

echo -n '12764787846358441471' | wc --chars # this is a 20-digit prime
time factor 12764787846358441471 # factoring this will take on the order of a few seconds
12764787846358441471: 12764787846358441471

real    0m14.582s
user    0m14.533s
sys 0m0.004s
# This is what I get on my laptop

# Make a file executable (defaults to current user)
chmod +x zab.py
# Make a file writeable (defaults to current user)
chmod +w myfile.txt
chmod u+w myfile.txt

# In python interpretive shell
globals() locals() vars() dir()
# Run python, ending with an interactive shell to fiddle with
python -i myscript.py
# Find out about an object
dir(object)
# Get help on a method
help(object.method)
# Get help on a package
help(numpy)
# To drop into an interactive shell from a script:
import code
code.interact(local=locals())
# random phone number
rand = random.randint(1000000000,9999999999)
# Put the hyphens in
s = str(rand)
s[:3] +"-"+ s[3:6] +"-"+ s[6:]
# print docstring
print file.__doc__

# Profile a python script
python -m cProfile script.py > profile.log


# Create images from LaTeX DVI document
dvipng -D 400 poisson-sep-pages.dvi -T tight -bg transparent

sudo pm-suspend # manually sleep

apt-cache showpkg xserver-xorg-input-synaptics
# Use synaptic to downgrade and lock
sudo vim /etc/apt/apt.conf.d/99unattended-upgrades
# Add this to prevent upgrades to package
// List of packages to not update
Unattended-Upgrade::Package-Blacklist {
      "xserver-xorg-input-synaptics";
};
# sage command
plot_vector_field((y, -x), (x,-3,3), (y,-3,3))
VectorPlot[{y, -x}, {x, -3, 3}, {y, -3, 3}]


# Get rid of network popups
killall nm-applet ; nm-applet &

# Brace expansion for sequeces/series/ranges of integers/numbers counting up
echo {1..9}
# With leading zeroes
echo {01..16}
# Fun with brace expansion
for i in {16..25}; do j=$((4*($i-16))); echo $i'_'$(($j+61))-$(($j+64)); done


# find Unicode/non-ascii characters in text file by numbered line
cat utf8.txt | LC_COLLATE=C grep -n '[^ -~]' --color=always | less -r
# show only the matching characteres
cat utf8.txt | LC_COLLATE=C grep -o '[^ -~]' --color=always | less -r
# send to text file instead of less
cat utf8.txt | LC_COLLATE=C grep -o '[^ -~]' > non-ascii.txt
# show only non-ascii characters
perl -pe 's/[[:ascii:]]//g' utf8.txt
cat utf8.txt | tr -cd '\200-\377'
# highlight characters that are non-ascii
grep --perl-regexp '[^[:ascii:]]' --color=always utf8.txt | less --RAW-CONTROL-CHARS
# highlight characters that are non-ascii and give line number
grep --perl-regexp '[^[:ascii:]]' --color=always --line-number utf8.txt | less --RAW-CONTROL-CHARS

grep 'it.*it' /usr/share/dict/words | sed '/s/it/IIT/g' | less

zip -r myfolder.zip myfolder/ # recursively zip a directory, putting the zip file into the current directory
unzip -l myfile.zip # list contents of zip file
unzip '*.zip' # unzip all files ending in .zip
unzip myfile.zip -d /path/to/desired/directory

# Latex for adding tengwar stuff (unfinished)
updmap --enable Map=tengwarscript.map

# ip address for IIT physics office printer 216.47.138.174

# decompress and unarchive a bzipped file
tar -jxvf firefox-18.0a1.en-US.linux-i686.tar.bz2

# decompress and unarchive a gzipped file
tar -zxvf XeroxLinuxi686xpxx_4.30.28.tgz

# decompress and unacrhive a tarred, gzipped file
tar zxf keepassx-0.4.3.tar.gz # The - is not necessary.

# list contents of a tarred file, i.e. tar archive
tar -tf myfile.tar
tar --list --file myfile.tar

# untar a tarred file into the working directory
tar -xvf myfile.tar
tar --extract --verbose --file myfile.tar

# untar a tarred file to a specified directory
tar -xvf myfile.tar -C /path/to/my/directory
tar --extract --verbose --file myfile.tar --directory /path/to/my/directory

# Gzip a single file
gzip myfile.txt # produces myfile.txt.gz and removes myfile.txt

cat /bin/cat # mojibake-fy the screen
reset # fix it

Ctrl-Z # get out of pretty much any terminal program and back to the shell
fg # move the job back to the foreground
kill %3 # kill job by jobspec (3, in this case)

# Patching
diff -u old_file new_file > patch.txt # Generates a patch file that can generate new_file from old_file
# To check the patch:
patch -b old_file # Patches old_file and creates a file called old_file.orig that is unpatched
vimdiff old_file old_file.orig # compare the patched file to the original file
# To use the patch
patch < patch.txt
$ To revert the patch
patch -R < patch.txt

find ./ -exec file '{}' \; # find out what kind of file all the stuff in the directories below are
find ./ -type l ! -exec test -r {} \; -print # find broken symlinks in directories below (test -r sees if the file is readable)

# Much like any other find exec command, but more efficient
find . -type f -name "*.deadtime" -exec rm '{}' +

# http://stackoverflow.com/questions/6085156/using-vs-with-exec-in-find
find . -exec ls '{}' \;
# ls file1
# ls file2
# ls file3
find . -exec ls '{}' \+
# ls file1 file2 file3

ssh -D 9999 iit@id1.mr.aps.anl.gov # secure shell into the APS sector 10 insertion device beamline account for IIT
ssh -D 9999 iit@bm1.mr.aps.anl.gov # secure shell into the APS sector 10 bending magnet beamline account for IIT
ssh -D 9999 nbeaver@216.47.138.69  # secure shell into desktop at physics office

# in python, save interactive history in current directory:
import readline
readline.write_history_file("my_history.txt")

# instant memory leak!
echo $(yes hurpaflerp)

# Check ip address to see if it responds, then load the video
ping -q -c 1 upload.wikimedia.org && vlc https://upload.wikimedia.org/wikipedia/commons/d/dd/Annie_Oakley_shooting_glass_balls%2C_1894.ogg

# Rsyncing remote directory contents into current local directory
rsync -rave ssh nbeaver@216.47.138.69:~/* ./
rsync --recursive --archive --verbose --rsh=ssh nbeaver@216.47.138.69:~/* ./
# Use --archive to keep timestamps the same and --partial to keep partially transferred files and --compress to use less bandwidth.
# Also use ssh for secure transfer.
rsync --archive --recursive --verbose --partial --compress --progress --rsh=ssh iit@id1.mr.aps.anl.gov:/home/iit/2014-07-18/ /home/nathaniel/Dropbox/15_Summer_2014/XAFS/2014-07-18/
# If you're not sure what you're doing is the right thing, use --dry-run.
rsync --archive --recursive --verbose --partial --compress --progress --dry-run --rsh=ssh iit@id1.mr.aps.anl.gov:/home/iit/2014-07-18/ /home/nathaniel/Dropbox/15_Summer_2014/XAFS/2014-07-18/

# Rsync local directory to another local directory (like cp, but shows progress and only sends deltas)
rsync --recursive --progress --partial /origin/path /target/path
# If you care about things like permissions, modification times, and symlinks:
rsync --recursive --progress --partial --archive /origin/path /target/path
# If you want to see the differences between all the files and how much data was transferred.
rsync --itemize-changes --verbose --recursive --progress --partial --archive /origin/path /target/path
# If you are e.g. copying large files and want to use a checksum rather than the (much faster) heuristic of size and modification time.
rsync --checksum /path/1/ubuntu-14.04-server-amd64.iso /path/2/ubuntu-14.04-server-amd64.iso

# Search with less case insensitive
less -i
#(Or just press -i while less is running)

# List networks
sudo lshw -C network

# See connected networky stuff like browsers
lsof -i -P +c 0 +M

# See information about battery, power, etc.
upower --dump | less
# Check battery state/power level
acpi    # shows battery info by default.
acpi -b # show battery specifically.
cat /proc/acpi/battery/BAT0/state # deprecated.
# 5387 mAh is 100%
# 3087 mAh is 58%
# 7900 mWh is 14%, so full capacity should be about 56000 mWh
# See more detailed information about battery life.
upower -i /org/freedesktop/UPower/devices/battery_BAT0
acpi -V
gnome-power-manager

# Restart upowerd
sudo killall upowerd && sudo /usr/lib/upower/upowerd & disown

# Check processor/cpu/chip information
cat /proc/cpuinfo
less /proc/cpuinfo

# Show disk logical name (e.g. /dev/sda), model number, vendor, serial, and size.
sudo lshw -class disk
# Show disk model number, serial number, firmware revision, configuration, rpm ("nominal rotation rate"), and enabled features.
sudo hdparm -I /dev/sda
# Show disk model number, serial number, firmware revision, size, and SMART disk health data.
sudo smartctl -a /dev/sda

# Show how much RAM there is.
sudo dmidecode --type memory | grep -i size
# Ram form factor

# Check hard drive partitions
cat /proc/diskstats

# Get general dump of hardware info
lshw

# Get a new DVD drive to work
sudo regionset /dev/dvd4

# Capture a disc image
cat /dev/dvd4 > ~/Videos/not-personal/Firefly/firefly-disc-1.iso

# Execute 'file' on every file below current directory
find . -exec file '{}' + | less

# Restart the gui for ubuntu
unity-2d-shell --reset

# Show numeric gateway ip address
route -n
# Another way to get the same thing
netstat -rn
# Show gateway name
route

# How to start a new flashbake directory:
#1. Initialize the git repository in the relevant directory.
git init
#2. Make a .flashbake file.
echo "*.txt" > .flashbake
#3. Make a .gitignore file (optional).
#4. Add a cronjob like this:
*/15 * * * * /usr/local/bin/flashbake ~/Dropbox/writings/ 5 2> ~/Dropbox/flashbake-status.txt

# Restart sound daemon, e.g. when flash has choppy audio
pulseaudio --kill
pulseaudio --start # start it up again as a daemon

# Debugging wifi.
# Get information about wifi adapter, including driver version and logical name (e.g. wlan0).
sudo lshw -C network > wifi-card-info.txt
# Get log of network manager.
sudo service network-manager stop
sudo NetworkManager --no-daemon 2>&1 | tee NetworkManager.log
# Better way of logging network manager, if you use systemd.
journalctl -fu NetworkManager
# Look in kernel log (ring buffer).
dmesg | grep 'rtl8192\|wlan' | tee dmesg.log

grep 'rtl8192\|wlan' | 


# Detach process from gnome-terminal
Ctrl-Z # Access shell prompt
bg     # Put job in background
# Note job number, or use
jobs
disown -h %1 # Detach job 1 from current terminal

# Restart compiz from a terminal emulator
# Note: Disown defaults to %1, so make sure you don't have any other jobs.
# bash: warning: deleting stopped job 1 with process group
DISPLAY=:0 compiz --replace & disown
# If that doesn't work...
unity --reset & disown


# Generate 4-word passphrase
shuf --head-count=4 /usr/share/dict/words

# See running jobs
lpstat
# List printers
lpstat -s
# Print document from the command line to a network printer by printer's name
lpr -P "Brother-HL-4070CDW" doc.pdf
# Print in double-sided
lpr -p "Brother-HL-4070CDW" -o sides=two-sided-long-edge doc.pdf
# List options for printer
lpoptions -p Brother-HL-4070CDW -l
# Use options with lpr
lpr -P "Brother-HL-4070CDW" -o PageSize=Letter -o PageRegion=A4 -o Duplex=DuplexNoTumble -o Resolution=1200x1200dpi doc.pdf
# See the print queue by printer's name
lpq -P "Brother-HL-4070CDW"

# List avahi/bonjour services like printers on the local area network (LAN)
avahi-browse --all --verbose --terminate --resolve
sudo arp-scan --localnet | less
sudo arp-scan --interface eth3 --localnet | less
# When avahi-daemon sucks up 100% cpu
# https://bugs.launchpad.net/ubuntu/+source/avahi/+bug/1059286
# *Ubuntu only*
sudo restart cups && sudo restart avahi-daemon

# Discover machines on the LAN
ifconfig eth0
# Note Bcast address. Now ping it:
ping -b -c 3 -i 20 $BROADCASE_ADDRESS

# Chat using netcat
# On computer #1
nc -l 55555
# On computer #2, where $IP is computer #1's ip address
nc $IP 55555

# After sshing in, any of these
users
who
w
# will tell you who is logged in.
# Also try
last
# to see who was logged in previously.
# To message user nbeaver, enter
write nbeaver <enter>
# Type message. They can write you back, too.
wall <enter>
# Type message, Ctrl-D

# Grep wifi connections for passkeys or passwords (uses grep "OR" \|)
sudo cat /etc/NetworkManager/system-connections/* | grep 'psk=\|password='

# Encrypt file with gpg (will prompt for passphrase)
gpg --symmetric super-secret-file.txt

# Generate encypted file with vim
vim -x encrypted-file.txt

# Start editing at bottom of file with vim
vim + myfile.txt

# Edit stdin in vim
vim -

# On bash command line, edit current command in your favorite $EDITOR (e.g. vim)
Ctrl-X Ctrl-E
# On bash command line, cut word before cursor
Ctrl-W
# On bash command line, cut word after cursor
Esc-W
# On bash command line, incremental undo
Ctrl-X Ctrl-U
# On bash command line, move forward/backword one character
Ctrl-F
Ctrl-B
# On bash command line, move forward/backword one word
Esc-F
Esc-B
# On bash command line, reverse incremental search through previous commands
Ctrl-R
# While using reverse incremental search:
Enter  # Executes command immediately
Ctrl-J # Copies command to prompt, allowing further editing
Ctrl-G # Escapes incremental search without doing anything
# Move to beginning of history
Alt-Shift-,
# Move to end of history
Alt-Shift-.
# Bash history modifiers (bang commands) http://www.softpanorama.org/Scripting/Shellorama/bash_command_history_reuse.shtml
!! # execute last command
!-1 # execute last command
!!:1 # first argument of the last command
!1 # first argument of the last command
!!:$ # last argument of preceding commnad
!$ # last argument of preceding commnad
!gzip # execute most recent gzip command
!?etc.gz # Like Ctrl-R, runs most recent command matching 'etc.gz'

# Remove spaces and duplicate lines
cat myfile.txt | tr --squeeze-repeats ' ' | sort | uniq > my-condensed-file-with-duplicates-removed.txt
sudo grep -r helper /var/log/

# Latex build for Bibtex
pdflatex -synctex=1 -interaction=nonstopmode %.tex|bibtex %.aux|pdflatex -synctex=1 -interaction=nonstopmode %.tex|evince %.pdf

# Generate combined file with name of file included
tail --lines=+1 version.log lsb_releaser-rd.log partial-crash-log.log lspci-vnvn.log > log-merge.log

# Use awk to give column 2, space, column 1, tab, then the last column
awk '{print $2,$1 "\t" $NF}' iit-phonebook-duplicates-removed-cleaned-up.txt | uniq > iit-name-and-email.txt

# Kill escalation
kill 21213 # sends SIGTERM (like Ctrl-C) to process 21213
kill -15 21213 # sends SIGTERM (like Ctrl-C) to process 21213
kill -2 21213 # send SIGINT to process 21213 (
kill -1 21213 # send SIGHUP to process 21213
kill -3 21213 # send SIGQUIT (like Ctrl-\) to process 21213; will dump core
kill -9 21213 # sends unblockable KILL signal to kernel

# Kill a process, wait a second, then see if it's still running
kill -3 4782 && sleep 1 && ps aux | grep 4782

# Find connected program
netstat -tulanp | less
netstat --tcp --udp --listening --all --numeric --program | less # long version
# List open ports
netstat -pln
# See list of things that are listening remotely
netstat -tnlp | grep -v 127.0.0 | grep -v ::1:

# Disk usage of current directory (total only)
du -sh
du --summarize --human-readable
# Director/file taking up the most space
du -hsx * | sort -rh | head -10
du --summarize --human-readable --one-file-system * | sort --human-numeric-sort --reverse | head --lines=10

# Adding metadata to pdfs with pdftk
# Add an info dictionary if there isn't one already (harmless)
pdftk book.pdf cat output book.pdf
# Extract metadata
pdftk book.pdf dump_data > info.txt
# Edit metadata
vim info.txt
# Update pdf metadata
pdftk book.pdf update_info  info.txt output out-book.pdf
# Dump all metadata
for f in *.pdf; do echo ">>>>>$f<<<<<" >> dump.txt; pdftk "$f" dump_data &>> dump.txt; done

# Copy all files in a remote director to this computer
scp -r iit@id1.mr.aps.anl.gov:~/Pelliccione/Te_edge_12_17_2012 /home/nathaniel/Dropbox/10_Fall_2012/APS/data-analysis/

# Run redshift with location near Chicago
redshift -l 41:-87
# Improved accuracy and run in the background:
nohup redshift -l manual:41.9:-87.6 -t 5700:3600 -g 0.8 -m vidmode -v & disown
# Note: don't let this conflict with the ~/.config/redshift.conf file.
# Note: this will produce a nohup.out file. If you don't like it, use it this way:
nohup redshift -l 41.9:-87.6 -t 5700:3600 -g 0.8 -m vidmode -v  2>/dev/null 1>/dev/null & disown
# http://stackoverflow.com/questions/10408816/how-to-use-unix-command-nohup-without-nohup-out

# Using gpg for encryption
gpg -c myfile.txt # Generates myfile.txt.gpg
# Be ready to provide a passphrase
gpg -c -o myfile.enc myfile # If you want to specify the output name
# Don't forget to erase the original file!
# Decrypt the encrypted file and push it to stdout
gpg -d myfile.enc
# Decrypt the encrypted file and save it to a file
gpg -o myfilenew myfile.enc

# Encrypt a tar file with your own public key.
# Hasn't been verified yet
tar --preserve-permissions --create --compress --file /etc/cups | gpg --encrypt --recipient 'nathaniel@thinkpad' --output '/home/nathaniel/SpiderOak Hive/etc-backup/cups.tar.gz.enc'

# Get all kinds of data, including disk usage
vmstat 1

# Rename all file ending in Unknown.pdf and strip the ' - Unknown' part of their name
for f in *Unknown.pdf; do mv "$f" ${f% - Unknown.pdf}.pdf; done

# Avoiding the '^[[A' or '^[[B' effect when trying to get previous command
# (pressing up or down arrow) for a cli program
rlwrap cmd
rlwrap java -cp /FromWeb/frink.jar frink.parser.Frink "$@"
rlwrap math
# Save a logfile of output (including echoed input)
rlwrap -l mylog.txt math

# Text to speech
echo 'Hello, world!' | espeak --stdin

# List to your computer say "Ping!" every 2 seconds
ping -i 2 google.com | sed -u 's/.*/ping/' | espeak

# Check network connectivity for dropped packets
ping -f -i 1 8.8.8.8
# Observe where the packets are being dropped at the same time
mtr -t
# Press 'p' in mtr to pause.

# Generate random alphanumeric password
strings /dev/urandom | grep -o '[[:alnum:]]' | head -n 30 | tr -d '\n'; echo

# Get information about zip files in current directory
for f in *.zip; do unzip -v $f; done

# Cracking zip files:
# Dictionary method
fcrackzip --use-unzip --verbose --dictionary --init-password /usr/share/dict/words platelet.zip
fcrackzip -uvDp /usr/share/dict/words platelet.zip
# Brute-force method, no knowledge of password, only setting length limits
fcrackzip -u -l 3-4 geek.zip
time fcrackzip -u -l 3-4 geek.zip


PASSWORD FOUND!!!!: pw == geek

real	0m49.633s
user	0m1.916s
sys	0m2.236s

# Do something for each line of a file
while read line; do
    echo $line # or whaterver you want to do with the $line variable
done < file.txt
# On one line
while read line; do echo -e "$line\n"; done < file.txt

# Run redshift in the background so that the terminal can be closed
# and use nohup so that it says open even after logging out
nohup redshift -l 41:87 & disown

# Allow everyone to read a file
sudo chmod a+r file

# Find out what shell you're using
# This is what the default shell is supposed to be
echo $SHELL
# This is the actual shell you're running inside (name of the running process)
echo $0

# Change the default shell to bash if your username is nbeaver
chsh --shell /bin/bash nbeaver
# Or, using which:
chsh --shell $(which bash) nbeaver
# Note that chsh will only work if you are in /etc/passwd.
# Otherwise you will have to edit .profile and add this.
export SHELL=/bin/bash
bash
# This will require you to hit Ctrl-D twice when one want to log out,
# once when you exit bash and once when you exit dash.

# Find out whether a package is installed or not.
# Also tells you the version and whether it's installed from a ppa.
# Also tells you if you have an old package and could install a newer candidate with apt-get upgrade.
apt-cache policy gnash browser-plugin-gnash
apt-cache policy ".*gnash.*"

# Gives much of the same info as policy (version, architecture) but also shows if e.g. config files are still installed.
# Does not show if there is a newer package available or not.
dpkg --list "*gnash*"
dpkg -l "*gnash*"

# Get description of package
aptitude show gnash
dpkg --status gnash
dpkg -s gnash

# Find out corresponding package to given command (what package a command "belongs" to)
dpkg -S $(which gnash)
dpkg --search $(which gnash)
# May take a long time to do the disk access, though.
    $ time dpkg -S /usr/sbin/NetworkManager 
    network-manager: /usr/sbin/NetworkManager
    
    real	0m54.106s
    user	0m0.564s
    sys	0m0.268s


# Guess the executable or command associated with a package.
# This actually lists all the files installed, so we need to grep out the executables.
# Caveat: will not tell you about wrapper scripts or arguments that need to be passed.
# In this case, it's trying to figure out the handbrake gui program which is named completely unlike HandbrakeCLI.
dpkg -L handbrake-gtk | grep bin
/usr/bin
/usr/bin/ghb
dpkg --listfiles handbrake-gtk | grep bin

# List the files installed by a .deb file 
dpkg -c /var/cache/apt/archives/example_1.0.0-1_all.deb
dpkg --contents

# Install a .deb file.
dpkg -i example-package.deb

# Download debian package into current directory
apt-get download mypackage

# Extract the files in a .deb package to a specified directory
dpkg -x /var/cache/apt/archives/example_1.0.0-1_all.deb ~/path/to/extracted/files
dpkg --extract
# Extract the files in a .deb package to a specified directory,
# and list all the files that were extracted (verbose extract)
dpkg -X /var/cache/apt/archives/example_1.0.0-1_all.deb ~/path/to/extracted/files
dpkg --vextract

# Make a screencast
ffmpeg -f x11grab -s `xdpyinfo | grep 'dimensions:'|awk '{print $2}'` -r 25 -i :0.0 -sameq output.mkv
ffmpeg -f x11grab -s 1600x900 -r 25 -i :0.0 -sameq output.mkv

# See programs using the internet
lsof -i -P | less

# Compile with the gfortran compiler
gfortran myprogram.f95 -o myprogram

# Show kernel information (e.g. 64-bit vs 32-bit)
uname --all

# Show cpu information (e.g. 64-bit vs 32-bit)
lscpu

# Try to fix wifi
sudo echo "SUSPEND_MODULES="$SUSPEND_MODULES rtl1892ce" >> /etc/pm/config.d/unload_modules

# Matrix-like command. Totally useless.
cat /dev/urandom | hexdump

# Get EXIF metadata for an image, including duplicate and unknown tags, sorted by group (for family 1).
exiftool -a -u -g1 IMG_3689.JPG
exiftool -duplicates -unknown -groupHeadings 1 IMG_3689.JPG

# Unmount partitions and detach disk
df # to see mounted partitions
df -h # to see human readable sizes
df -T # to see filesystem types
sudo udisks --unmount /dev/sdb1 && sudo udisks --unmount /dev/sdb2 && sudo udisks --detach /dev/sdb

# Unmount a fuse filesystem
fusermount -u /path/to/mount/point

# Get list of recently installed packages
zcat --force /var/log/dpkg.log* | grep "\ install\ " | sort --reverse | less

# Add something to your $PATH, a colon-separated list of directories
export PATH=$PATH:$HOME/my-path

# View colored output in less
less --RAW-CONTROL-CHARS
less -R

# Suspend to screensaver and lock screen
xscreensaver-command -lock
# Choose display; normally :0.0 unless you have another x server running.
xscreensaver-command --lock --display :1.0
# On xfce
xflock4
# For gnome
gnome-screensaver-command --lock

# See all keybindings
bind -p | less

# List a user's crontab
crontab -u username -l | less

# This is apparently how to solve your XFCE problems
rm -rf ~/.cache/sessions

# Change all spaces in file names into underscores
rename 's/\ /_/g' *

# Change all spaces in file names into underscores, even files with weird names
find . -depth|rename 's/\ /_/g'

# Extract embedded images from a pdf and dump them into the current directory
pdfimages -j mypdf ./

# For when you only want to see 'gnash', not 'blah-gnash' or 'gnash-blah'
apt-cache search --names-only '^gnash$'

# Get the first field of a text file and put it all on one line
cut -f 1 mytext.txt | tr '\n' ' ' | less

# Simple file sharing
# http://superuser.com/questions/108394/peer-to-peer-tool-for-file-transfer
# (On sending machine:)
# 1. Navigate to directory of choice.
# 2. Run
python -m SimpleHTTPServer
# or, for python 3.0,
python -m http.server 8000
# 3. Find ip address and tell it to receiving machine.
# (On receiving machine)
# 4. In web browser, go to http://IP_OF_SERVER:8000
# 5. Download!

# If you want to know which packages are available, use one of these. Does not require root priveleges.
apt-get --simulate install list_of_packages
aptitude --simulate install list_of_packages # this one also tells you how much space it will require

# If you want to get the source code for a package, run this. It does not require root priveleges.
apt-get source <package-name>
# If you want to build it from source, do this:
apt-get build-dep <package-name>
# If you're having problems building from source:
auto-apt run ./configure

# Install
./install

# Strip out comments (lines starting with #, i.e. '^#') and blank lines (i.e. '^$')
grep -v '^#\|^$'

# Copy hidden files (dotfiles)
cp -r test/.[a-zA-Z0-9]* target

# Find all symbolic links in a folder
find ~/Dropbox -type l -ls

# Find all symbolic links in a folder to a folder
find ~/Dropbox/ -lname '*Dropbox*'

# Find all directories with a name including 'Link'. These are suspicious characters Dropbox has dereferenced into directories instead of symbolic links.
find ~/Dropbox -type d -name '*Link*'

# Make a symbolic link in current directory
ln --symbolic /path/to/blah.txt link-to-blah.txt
# Make a symbolic link with spaces in the name.
ln -s ~/.gnupg/ "Link to .gnupg"
# Overwrite a symbolic link
ln --symbolic --force ~/source/ ~/target/overwritten-link

# Change all text files with 'apt-get' in the name to 'package'
rename 's/apt-get/package/' *.txt

# See what drives are mounted
less /etc/mtab

# Unmount a drive (use the directory it's mounted at, not /dev/)
umount /media/SMALLBEANS

# Move files in a directory up one
mv */* ./

# Move files in current directory to parent directory
# Note: using cp or rsync is all well and good for this, too, but what if the files are huge? mv can move directories without copying files.
mv * .[^.]* ..

# Re-encode a file to play on a standard device, e.g. Sony Bravia TV
ffmpeg -i Firefly_special_features_1.m4v -target ntsc-dvd output.mpg

# Do it for every file, and run on three processors (if it's compiled to support multithreading)
for f in *.m4v; do ffmpeg -threads 3 -i $f -target ntsc-dvd $(basename $f .m5v).mpg; done
# Do it for a big TV, and run it on 4 processors
for f in *.m4v; do ffmpeg -threads 4 -i $f -s wxga -vcodec mpeg1video $(basename $f .m4v).mpg; done

# Run handbrake from the commandline to do much the same thing, but for an .iso disk image
HandBrakeCLI -Z "High Profile" -i a_movie.iso -o a_movie.mp4
# http://superuser.com/questions/329349/how-do-i-convert-iso-to-mp4-without-mounting-with-ffmpeg

# Count number of files in working directory, recursively
find . -type f | wc -l

# Set up an ad-hoc wireless network between two linux machines
# http://unixlab.blogspot.com/2010/01/setting-up-ad-hoc-wireless-network.html
# On machine A
ifconfig wlan0 down
iwconfig  wlan0 channel 4
iwconfig  wlan0 mode ad-hoc
iwconfig  wlan0 essid 'fermilevel'
iwconfig  wlan0 key 1234567890
ifconfig  wlan0 192.168.1.1
# on machine B
ifconfig wlan0 down
iwconfig  wlan0 channel 4
iwconfig  wlan0 mode ad-hoc
iwconfig  wlan0 essid 'fermilevel'
iwconfig  wlan0 key 1234567890
ifconfig  wlan0 192.168.1.2

# Search for a particular process by name
ps u -C duplicity

# Recently installed packages
zcat -f /var/log/dpkg.log* | grep "\ install\ " | sort | tail

# Search for all directories containing 'doc' in /usr/share except the ones in /usr/share/doc
find /usr/share/ -path /usr/share/doc -prune -o -type d -name '*doc*' -print

# Get an Artist - Song output from an m3u playlist
cat playlist.m3u | grep EXT | cut -d, -f 2 | less

# Find out which shell session you're using
ps -p $$

# Compress and tar a directory called 'meansum'
tar -czvf meansum.tgz meansum/
tar --create --gzip --verbose --file meansum.tgz meansum/

# The reddit disapproval face
ಠ_ಠ

# Show full path of a file with ls
ls -d $PWD/*

# Use a text file as a command line argument
w3m $(<temp.txt)

# Get the fonts used by a pdf; useful to determine if it's ocr'ed or not.
pdffonts *.pdf

# Get only the fonts from the first page. If it's not OCR'ed, the output will be this: [none]
pdffonts -l 1 *.pdf | tail -n +3 | cut -d' ' -f1 | sort | uniq

# Get return (error) value of last command
echo $?

# Annoying KDE problems
# https://bugs.kde.org/show_bug.cgi?id=120421
killall korgac

# Get random 6 digit number
echo $RANDOM

# X over SSH
ssh -X nbeaver@rontgen.phys.iit.edu

# Execute a graphical program over SSH (in this case, gedit)
dbus-launch gedit

# One way to check iowait,
# although this isn't very useful on multicore systems.
# http://www.linuxquestions.org/questions/linux-server-73/what-is-iowait-exactly-623450/
mpstat

# See disk activity without being root.
# Another way to check iowait.
iostat
# Show with extended statistics in kilobytes per second with device utilization info and omit devices unused,
# repeating every second.
iostat -xkdz 1

# Show mounted drives in near little table
mount | column -t

# Kill stopped jobs
kill $(jobs -p)

# Use a string as if it were a file
cat <<< 'HI'

# From here: http://mmb.pcb.ub.es/~carlesfe/unix/tricks.txt
# let people in your group access folders without messing up file permissions (never do 'chmod g+x * -R'!)
find . -type d -exec chmod g+x {} \;

# Run a command 5 minutes later
echo "Done" | at now + 5 minutes
# or
at now + 5 minutes
warning: commands will be executed using /bin/sh
at> echo "Done"
at> <EOT>
# See 'at' commands
atq
# Remove at commands
atrm

# Reminder to go to bed at 10:30pm
echo  "DISPLAY=$DISPLAY xmessage Go to bed\!" | at 22:30

# Editing text file 'in place' (i.e. without having to make the temp file on your own)
# http://unix.stackexchange.com/questions/11067/is-there-a-way-to-modify-a-file-in-place
# Remove all lines containing foo:
sed -i '/foo/d' myfile
# Keep all lines containing foo:
sed -i '/foo/!d' myfile
# Make a backup of file while sed is working on it (makes a file called hello.txt.bak)
sed -i.bak -e 's/hello/jello/' hello.txt

# SSH without a password (using ssh keys). You only need to do this once.
ssh-keygen -t rsa
# Use defaults (blank password)
# In my case, public key was saved as ~/.ssh/id_rsa.pub
# Now copy public key to remote computer. I originally used:
scp /home/nathaniel/.ssh/id_rsa.pub nbeaver@chloride.phys.iit.edu:~/.ssh/authorized_keys
# This will overwrite the file authorized_keys, so only do this if it doesn't already exist.
# There is actually a builtin command to do this sensibly (surprise, surprise!):
ssh-copy-id -i ~/.ssh/id_rsa.pub nbeaver@chloride.phys.iit.edu

# How to tell if someone is ssh'ed into this machine:
last
# Or
ps aux | grep ssh
# Example:
nbeaver   7395  0.0  0.0   4756   572 ?        Ss   Oct18   0:00 /usr/bin/ssh-agent /usr/bin/dbus-launch --exit-with-session x-session-manager
nbeaver  16870  0.0  0.1   8180  1480 ?        S    22:01   0:00 sshd: nbeaver@pts/1

# Disable system speaker in X:
xset -b
# Turn off console beeps (system bell) for all programs
xset b off
# Set the beep length to 0 (does the same as turning it off)
setterm -blength 0
# Check if the beep is on or not
xset q | grep bell
# another way to turn off the system bell
rmmod pcspkr
# making it permanent
echo "blacklist pcspkr" > /etc/modprobe.d/nobeep.conf

# From http://overapi.com/linux/
# Run cmd1 then cmd2
cmd1 ; cmd2
# Run cmd2 if cmd1 is successful
cmd1 && cmd2
# Run cmd2 if cmd1 is not successful
cmd1 || cmd2
# Show distribution (version of Linux)
less /etc/issue
lsb_release -a
# Show executable path
echo $PATH
# Run last command starting with abc
!abc
# Print last command starting with abc
!abc:p
# Last argument of previous command
!$
# Last argument of previous command
ALT-.
# All arguments of previous command
!*


# Check video file for errors
# http://606u.dir.bg/avicheck/
ffmpeg -v 5 -i file.avi -f null -
# Double video volume (256 is unchanged)
# http://superuser.com/questions/31176/increase-volume-of-an-mkv-video-from-linux-terminal
ffmpeg -i vid.mkv -vol 512 -vcodec copy output.mkv
# Split up video into segments
# http://superuser.com/questions/31135/split-mpeg-video-from-command-line
# http://unix.stackexchange.com/questions/1670/how-can-i-use-ffmpeg-to-split-mpeg-video-into-10-minute-chunks-for-youtube-uploa
ffmpeg -i source-file.foo -ss 0 -t 600 first-10-min.m4v
ffmpeg -i source-file.foo -ss 600 -t 600 second-10-min.m4v
ffmpeg -i input.mpg -ss 00:00:10 -t 00:00:30 out1.mpg -ss

# Get audio file from video
ffmpeg -i myvid.mp4 ./out.mp3
# Get audio from vidoe without re-encoding
# http://www.commandlinefu.com/commands/view/13359/dump-audio-from-video-without-re-encoding.
ffmpeg -i file.ext -acodec copy -vn out.ext

# Convert audio file to mp3
ffmpeg -i in.ext out.mp3
# Somewhat better method (less loss of quality)
ffmpeg -v 5 -y -i input.m4a -acodec libmp3lame -ac 2 -ab 192k output.mp3

# See open files in home directory
lsof /home/nathaniel

# Start less at the first instance of a pattern
less -p ghemical /var/log/dpkg.log

# Start less at the bottom of a file
less +G /var/log/dpkg.log

# Determine iso resolution, codec, etc:
ffmpeg -i image.iso
avconv -i image.iso
# mediainfo will only tell you ISO format and file size :(

# Blank the screen temporarily (turn off display)
xset dpms force standby

# Use less on multiple files
less file1 file2 file3
# While in less:
:n
:p
# Save logfile with less (if it's a stream).
:s

# Bluetooth
blueman-manager

# Change mp3 sample rate of every mp3 file in a directory
mkdir converted
for i in *.mp3; do sox --multi-threaded "$i" -r 44100 "converted/$i"; done
# Make sure you don't try to to change the files in place; they will be trashed.
# Either put them in a another directory, as above, or modify the file name.
cat Sn_Ni3Sn4_nano_02-21-2013.002 | tail -n +18 | column -t | less

# Run through a bunch of text files like cat, but with the filenames visible
tail --lines=+1 *.txt | less

# Diff two man pages by running one into stdout and the other to stderr. (Not named pipes, as far as I can tell.)
man chattr > 1; man chmod > 2; diff -u 1 2 | less

# Watch a file for changes
tail -f myfile.log
less +F myfile.log
# Pause/freeze/halt/stop the terminal output using the shell.
Ctrl-S
# Resume the output.
Ctrl-Q

# Open file using $EDITOR or $VISUAL in less:
v

# Diff gzipped files (diffuse is my favorite graphical diff at the moment).
diffuse <(zcat file1.gzip) <(zcat file2.gzip)

# IRC chat command to register nickname
/msg NickServ register [password] email@email-provider.com
# All freenode servers listen on ports 6665, 6666, 6667, 6697 (SSL only), 7000 (SSL only), 7070 (SSL only), 8000, 8001 and 8002
# All GeekShed servers accept standard connections on the following ports: 6667, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6668, 6669, 7029, 7070, 1494, 1755, and 6697 (SSL only).
# IIT filters 6666, 6667, 6668, and 6669, and a lot more. SSL works just dandy, though.
# Start a new channel, e.g. #openkim. Make sure you are registered first.
/join #openkim

# List open network ports and the process that owns them
sudo lsof -i
sudo netstat -lptu
sudo netstat -tulpn
sudo netstat -tuplen

# Using nmap
# Print a list of target hosts
sudo nmap -sL 216.47.138.* | less
# Skip port scan/'ping scan'/slightly more intrusive than -sL/determines if host is online
nmap -sP 198.37.19.*
nmap -sn 10.10.10.0/24
# http://www.linuxforums.org/forum/newbie/51732-see-all-users-currently-lan-2.html
# These can take a while...
# TCP scan, assuming network 192.168.1.0/255.255.255.0.
nmap -T Aggressive -sT 192.168.1.*
# ICMP echo request scan
nmap -T Aggressive -sP 192.168.1.*
# UDP scan
nmap -T Aggressive -sU 192.168.1.*
# Enable OS detection
sudo nmap -O 198.37.20.176
sudo nmap -O ord08s06-in-f7.1e100.net
# From the nmap man page, tells which ports are open, OS, and traceroute
nmap -A -T4 scanme.nmap.org
nmap -A -T4 198.37.20.176

# See printer status from the command line
lpstat -t

# Determine the process id (PID) by clicking on an open window with the mouse
xprop _NET_WM_PID
# Determine executable related to window
xprop WM_CLASS
# Search for the process number, e.g. 1400
ps -p 1400
grep -ir 'discrepancy' /var/log | less

# Determine more info about a window
xwininfo

# Show display you're using (e.g. :0.0)
xdpyinfo | grep 'name of display:'

# Suspend the bash shell
suspend
# Oh my goodness! How do I get it back?
ps aux | grep bash
# We want this one:
1000     11004  0.0  0.1  10172  6552 pts/2    Ts+  15:01   0:00 /bin/bash
# 'kill' the process (actually bring it back to life):
kill -SIGCONT 11004

# Output multiline strings
echo -e '1\n2'
printf "%d\n%d\n" 1 2
echo '1
> 2'

# Convert fahrenheit to celsius
units --terse 'tempF(212)' 'tempC'
# Load default units file ('') as well as a personal units file (personal units file can access standard units as well as its own).
units -f '' -f ~/Dropbox/projects/units/my-units.dat

# Trying to kill all those blasted error reports from when xscreensave dies.
killall apport-gtk
# Well, that got rid of the bug reporting windows. But what about those tray notifications that say,
# 'crash reported detected'? You have to click on all of them individualy.
sudo service stop whoopsie # Doesn't help.
sudo vim /etc/default/whoopsie # Changed true to false; didn't help.
killall xfce4-notifyd # Didn't help.
sudo service apport stop # Didn't help.
sudo rm /var/crash/* # This works!
sudo vim /etc/default/apport # This might be even better if the error reporting continues to be annoying.

# Using your very own text editor even if someone's VISUAL is set to something else and you don't want to mess it up.
env VISUAL=pico crontab -e

# Find symlinks to a file. From http://unix.stackexchange.com/questions/3710/how-do-i-see-what-symlinks-exist-for-a-given-directory
find -L /haystack -xtype l -samefile /target

# Get a listed of sorted email addresses from a text file. From http://stackoverflow.com/questions/2898463/using-grep-to-find-all-emails
cat raw.txt | egrep -o "[^[:space:]]+@[^[:space:]]+" | tr -d "<,>" | sort > sorted-email-list.txt
# This looks good, too: http://www.commandlinefu.com/commands/view/4118/extract-email-adresses-from-some-file-or-any-other-pattern
grep -Eio '([[:alnum:]_.-]+@[[:alnum:]_.-]+?\.[[:alpha:].]{2,6})' file.html | sort | uniq > sorted-email-list.txt

# Open that connection editor that normally you click on the wifi icon to access.
nm-connection-editor

# Readline wizardry:
alt-shift-8 # (i.e. M-*) put all the matching completions on the line
Ctrl-W # delete preceding word
Alt-D # delete following word
Ctrl-U # delete line
Ctrl-A-K # delete line
Ctrl-XX # move between EOL and current cursor position
Ctrl-Shift-- # Undo
Ctrl-X Ctrl-U # Undo
# There really isn't a redo command.
Ctrl-Y # Paste whatever you last deleted

# See which processes are using disk, i.e. doing I/O.
sudo iotop --only
# Can also use htop, which does not require root.
htop

# See connections in promiscuous mode and turn on port display.
sudo iftop -pP
sudo iftop -pP -i wlan2

# See which processes are using the most bandwidth
sudo nethogs wlan0

# See info pages, but in the 'less' pager. Much nicer.
info gpg | less

# Reverse DNS lookup
host 216.47.138.69
# 69.138.47.216.in-addr.arpa domain name pointer chloride.phys.iit.edu.

nslookup 216.47.138.69
# Server:		127.0.0.1
# Address:	127.0.0.1#53
#
# 69.138.47.216.in-addr.arpa	name = chloride.phys.iit.edu.
nslookup debian.org

# Slightly more detailed
host -a 216.47.138.69
dig -x 216.47.138.69
# Also works on domain names
host senfter.debian.org

# Choose a mirror to download from by comparing speed and latency
sudo netselect -vv debian.uchicago.edu mirror.anl.gov

# Find out upload and download speed.
# Based on speedtest.net.
speedtest-cli

# See the ARP (Address Resolution Protocol) table.
arp
/usr/sbin/arp

# See available network interfaces, e.g. wlan, eth
ip link show
netstat -i
/usr/sbin/ifconfig -a

# Find out your ip address
ifconfig
ip addr show

# See what an interface can do, e.g. if wakeonlan is enabled
ethtool eth3
sudo /sbin/ethtool eth0

# Wake on LAN using mac address
wakeonlan 00:0d:56:d2:a8:24
wakeonlan -i 216.47.138.69 00:0d:56:d2:a8:24

# You want it to shutdown and you really mean it!
sudo /sbin/poweroff -d -f -h -i -p
# Newer ones use this syntax.
sudo /sbin/poweroff --force --poweroff --verbose
# Or maybe this?
sudo shutdown -h now
sudo init 0
sudo halt
# Rebooting
sudo shutdown -r now

# See what the time is anywhere in the world, interactively.
tzselect
# See what the time is in India.
echo -e '5\n14\n1' | tzselect 2>&1 | grep 'Local time' # time in India
echo -e '2\n49\n11\n1' | tzselect 2>&1 | grep 'Local time' # time in Chicago (CST)
# A better way, based on
# http://www.cyberciti.biz/tips/date-command-set-tz-environment-variable.html
export TZ=America/Chicago && date && unset TZ
export TZ=Asia/Kolkata && date && unset TZ
export TZ=Asia/Dhaka && date && unset TZ
# What time will it be 10 hours from now in Bangladesh?
export TZ=Asia/Dhaka && date --date='10 hours' && unset TZ
# What time will it be here when it's 10 hours later in Dhaka?
date --date='TZ="Asia/Dhaka" 10 hours'
# What time of day will it be in India if it's at a specified Central Standard Time?
TZ=Asia/Kolkata date -d 'Monday, February 24, 2014 9:00am CST' +%r
# What will be the full date?
TZ=Asia/Kolkata date -d 'Monday, February 24, 2014 9:00am CST' +'%A, %B %e, %r'

# See if you've got any linux backports installed
apt-cache policy linux-backports-modules-cw-* | grep Installed | uniq

# Show network connections from the command line
nmcli device status
# Disconnect from eth0
nmcli device disconnect eth0

# List available WiFi access points.
nmcli dev wifi
# Sort available wifi access points by signal strength, strongest at the top
# Have to start with first field, then go 93 characters out, sort numerically, and reverse so largest is at the top.
nmcli dev wifi | sort -k1.93nr
# More robust, cutting out the * at the beginning that marks the current connection and then going to the 6th field,
# which is the signal strength percentage.
nmcli dev wifi | cut -c4- | sort -k6nr | less

# Remove files with dashes, e.g. a file called '-'
rm -- -
# Remove all files without being goofed up by leading dashes.
rm -- *

# Kill an unresponsive SSH session
# http://www.cyberciti.biz/faq/openssh-linux-unix-osx-kill-hung-ssh-session/
<Enter> ~ .

# Escape latex special characters (reserved characters)
echo "55% increase" | pandoc -t latex
echo '~ # $ % ^ & _ { } < > \ |' | pandoc -t latex
echo '~ # $ % ^ & _ { } < > \ |' | pandoc -t latex --listings

# Convert files using pandoc, e.g. markdown to latex
pandoc -f markdown -t latex myfile.markdown  > myfile.tex

# Check if advanced globbing patterns are on
shopt extglob
# Turn them on
shopt -s extglob
# Move all but one of a file (http://stackoverflow.com/questions/670460/move-all-files-except-one)
mv ~/Linux/Old/!(Tux.png) ~/Linux/New/

# Get current beamline status at APS
w3m http://www.aps.anl.gov/aod/blops/status/srStatus.html | grep "Operations Status"

# Insert all possible completions (readline completion trick)
<Alt><Shift>8 # i.e. M-*

# More readline stuff
C-x C-u # undo
M-f # forward one word. M is meta, i.e. alt key.
M-b # back one word. M is meta, i.e. alt key.

# Put this in .inputrc for menu completion (like vim, where it cycles through options)
"\C-f": menu-complete

# Fun on the beamline. :)
iit@bm1:~$ w
 21:06:54 up 272 days,  3:11, 10 users,  load average: 0.00, 0.00, 0.04
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
segre    tty1                      19Dec12 177days  0.37s  0.35s -bash
kwiatal  tty2                      26Mar13 80days  0.46s  0.39s -bash
katsouda pts/0    :0.0             Thu14    2.00s  2:02   5:18  gnome-terminal
katsouda pts/1    :0.0             14:46    1:02m 13.10s  5:18  gnome-terminal
katsouda pts/4    :0.0             14:46    1:32m 17:04   5:18  gnome-terminal
iit      pts/5    mr116.mr.aps.anl 20:05    0.00s  0.05s  0.01s w
katsouda pts/8    :0.0             14:46    1:03m  0.02s  5:18  gnome-terminal
katsouda pts/7    :0.0             14:46    1:01m  0.02s  5:18  gnome-terminal
iit      pts/11   mr116.mr.aps.anl 19:17    1:33m  0.10s  0.02s pager -s
gu34012  pts/9    mr011.mr.aps.anl 07Jun13  1:08m 22:37  22:36  /opt/mx/bin/mxmotor -F /opt/mx/etc/motor.dat -s /home/gu34012/.mx/bm1_scan.dat
# Tell Razib to open a new terminal while we're waiting for a raster scan to complete and tell me what he sees with 'who am i'.
iit@bm1:~$ who am i
iit      pts/5        2013-06-14 20:05 (mr116.mr.aps.anl.gov)
it@bm1:~$ write katsoudas pts/10
Hello, Razib!
iit@bm1:~$ who am i
iit      pts/5        2013-06-14 20:05 (mr116.mr.aps.anl.gov)
iit@bm1:~$ 
Message from katsoudas@bm1 on pts/10 at 21:18 ...
Is this some kind of joke
EOF
iit@bm1:~$ ps aux | grep ssh
# Blah blah blah...
iit       6467  0.0  0.0  11640  1608 ?        SN   20:05   0:00 sshd: iit@pts/5  
# That's me!

# Display which tty you are on
tty

# Show mtime (modification time, age of data in file, updated by writing to file)
ls -l
# Show ctime (inode change time, updated by writing to file or changing permissions)
ls -lc
# Show atime (access time, updated by reading the file)
ls -lu
# Directory times are updated when a file in them is added, removed or renamed, but not when it is only modified.

# When apt-get is updating and running dpkg, then gets interrupted, use this:
sudo dpkg --configure -a

# See reverse dependecies (which packages depend on a specified package)
apt-cache rdepends gcc
# Limit to those that are installed
apt-cache --installed rdepends gcc
# Do it recursively
apt-cache --installed --recurse rdepends gcc
# Do it recursively and choose which kinds of dependencies to show.
apt-cache depends --recurse --no-recommends --no-suggests --no-conflicts --no-breaks --no-replaces --no-enhances ipython-notebook | grep apache2 | less


lspci -nnk | grep -A3 "Network controller"

# The venerable finger command
iit@bm1:~$ finger iit
Login: iit            			Name: IIT General Usage Account
Directory: /home/iit                	Shell: /bin/bash
Office: IIT - MRCAT, 630.252.1710 - 
On since Tue Jun 18 18:35 (CDT) on pts/0 from 107-210-253-34.lightspeed.cicril.sbcglobal.net
No mail.
No Plan.
# Find out who you are (username)
whoami
# Find out if you have root (sudoing) priveleges
sudo -v
# Find out what you can do if you have sudo priveleges
sudo -l

# Find out what your hostname is.
hostname
uname -n
# Find out more.
hostname -f
dnsdomainname

# Find words in the dictionary starting with certain letters
look xa

# Using screen
screen # start a new screen session; press enter at welcome screen
Ctrl-a, d # detach current screen; you can log out and it will keep going
screen -r # reconnect to a previous screen session
Ctrl-a, c # create new screen window
Ctrl-a, a # move to other screen window
Ctrl-a, w # list open screen windows
# Figure out if you're using screen
echo $STY
# Or just press Ctrl-a ?

# Convert an image from a pdf to one that LaTeX can work with, a png
pnmtopng park-2009-synthesis.ppm > park-2009-synthesis.png

# Copy some text to clipboard
echo "Hi" | xsel --clipboard
echo "Hi" | xsel -b
# Append some text to clipboard
echo "Hi" | xsel
# Clear xsel clipboard
xsel -c -p; xsel -c -s; xsel -c -b;
kill 3105; sleep 1; ps -p 3105

# Copy working directory to clipboard
pwd | tr -d '\n' | xsel -b
# Copy working directory to clipboard, no trailing newline
pwd | tr -d '\n' | xsel -b
# Alternative method; shell-dependent (non-portable)
echo -n $(pwd) | xsel -b

# Lookup information about a website or ip address
whois iit.edu

# Remove newlines, trailing and otherwise
tr -d '\n'

# Get the last entry in history
history | tail -n2 | head -n1| cut -c 8-

# Rsync is pretty awesome.
sudo rsync --verbose --progress --archive --compress --rsh ssh --rsync-path="sudo rsync" /var/www/pmwiki nbeaver@chloride.phys.iit.edu:/var/www/

# Access stuff like bluetooth settings if you can't remember how to launch it graphically.
gnome-control-center network

# Trace the route/path of the connection to an ip address or website
tracepath google.com
tracepath 10.96.21.19

# Cool use of the find command: http://www.tuxradar.com/content/command-line-tricks-smart-geeks
# Find all files in home directory modified or created today.
find ~ -type f -mtime 0
# If you know it's an mp3...
find ~ -type f -mtime 0 -iname '*.mp3'
# Find files in your home directory that you don't own
find ~ ! -user ${USER}
# Install from source, but turn it into a debian package first
./configure && make && checkinstall
# Show the real directory of a symlinked one
pwd -P
# Move to real directory
cd $(pwd -P)
# Display a quick message
xmessage -display :0.0 "You are late"

# Morse code!
echo "Hello" | morse -s | tr -d '\n'
echo ' .... . .-.. .-.. ---  ...-.-' | morse -d

# What's taking up space on your home directory?
du --summarize ~/* | sort -nr | less

# Suspend the computer to RAM and wake up 60 seconds later
sudo rtcwake -m mem -s 60
# Don't suspend, just shchedule a wakeup 60 seconds later
sudo rtcwake -m no -s 60

# If your package manager gives you trouble, don't bother swearing, just reinstall!
sudo apt-get --reinstall --purge install flashplugin-installer

# Browse gopher with lynx
lynx gopher://gopher.floodgap.com/1/world

# Link to USPS package tracking for three packages
https://tools.usps.com/go/TrackConfirmAction.action?tLabels=23063250000076469472,23063250000076469489,VH642248316US

# Mute master sound
mixer set 'Master' mute
# Unmute master sound
amixer set 'Master' unmute

# List only dotfiles
ls -a | grep '^\.'

# Graphically change timezone
time-admin

# Combine/merge/join/concatenate pdf files together
pdfjoin 1.pdf 2.pdf  # creates a 2-join.pdf file with both 1 and 2.
pdfunite 1.pdf 2.pdf 1-and-2.pdf # creates a 1-and-2.pdf file with both 1 and 2.
pdftk *.pdf cat output onelargepdfile.pdf
# Insert pages into a pdf
pdftk A=missing15-16.pdf B=pg15-16.pdf cat A1-14 B A15-end output manual.pdf
# Inset pages in whatever order necessary into a pdf
pdftk A=missing15-16.pdf B=pg15-16.pdf cat A1-14 B2 B1 A15-end output manual.pdf
# Not sure if these work on an encrypted pdf: http://stackoverflow.com/questions/2507766/merge-convert-multiple-pdf-files-into-one-pdf
# Combine/merge/join/concatenate pdf files together in numerical order of filename, instead of alphanumeric order. Uses evil parsing of ls, which is a bad idea. Sorry.
pdfjoin $(ls -v)

# Oh my gosh, I just entered my password in the terminal and now it will be in the bash history! What can I do?
unset HISTFILE
# Whew!

# Remote desktop into a Windows machine
rdesktop 123.45.678.910
# Remote desktop into a Windows machine, autofill user and graphically prompt for password
rdesktop -u nbeaver 123.45.678.910
# Remote desktop into a Windows machine, autofill user and prompt for password from command line
rdesktop -u nbeaver -p - 123.45.678.910
# Remote desktop with FreeRDP, a remote desktop program with more features
xfreerdp -u nbeaver 123.45.678.910

# VNC into a machine (Windows or Linux) with a VNC server running (TightVNC in this case)
vncviewer dhcp195.wh.iit.edu:5900
# Note that you have to right-click to scroll up or left.
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=617724
# https://bugs.launchpad.net/ubuntu/+source/tightvnc/+bug/111039

# VNC into a Linux server
# First, ssh into the sever and run this (or run it ahead of time)
x11vnc -display :0
# Next, run this on the client.
xvncviewer -via iit@bm1.mr.aps.anl.gov bm1:0

# VNC into a Windows computer by running X over ssh through a linux server,
# in case e.g. firewall blocks so you can't even ping the Windows machine.
me@laptop:~$ ssh -X iit@bm1.mr.aps.anl.gov
me@remote-server:~$ dbus-launch vncviewer 164.54.244.15:5900
me@remote-server:~$ rdesktop -u PTStat -f 164.54.244.15

# See cron updates and ssmtp status
less /var/log/syslog

# See attached USB devices
lsusb

# Identify printer model.
sudo escputil -d -r /dev/usb/lp0
# Check printer ink levels.
sudo escputil -i -r /dev/usb/lp0
# Check printer status (including ink levels).
sudo escputil -s -r /dev/usb/lp0
# Run nozzle check.
sudo escputil -n -r /dev/usb/lp0
# Alignment (does not work for me, sadly.)
sudo escputil -a -r /dev/usb/lp0

# Add a ppa (personal package archives)
sudo add-apt-repository ppa:ubuntu-mozilla-daily/ppa
sudo apt-get update
sudo apt-get upgrade

# Figure out what is listening on port 80 (http://www.cyberciti.biz/faq/find-linux-what-running-on-port-80-command/)
netstat -tulpn | grep :80
fuser 80/tcp
lsof -i :80 | grep LISTEN

# Look at process id 2720
ls -l /proc/2720/exe
# lrwxrwxrwx 1 nathaniel nathaniel 0 Aug  9 11:05 /proc/2720/exe -> /usr/lib/firefox/firefox

# Launch printer stuff from command line
system-config-printer

# Add a red dot to the prompt, e.g. when recording; from here: https://news.ycombinator.com/item?id=6190600
PS1=`printf "\033[1;31m\342\227\217\033[0m\\$ "` sh

# Sort a file in place and guarantee uniqueness as well.
sort --unique myfile.txt --output=myfile.txt
sort  myfile.txt -u -o myfile.txt

# Eject dvd drive
eject /dev/dvd4
# Close dvd drive (does not work on most laptops)
eject -t /dev/dvd4
# Toggle dvd drive (also does not work on most laptops)
eject -T /dev/dvd4

# Start a new x session (generally you already have 0 running)
# Go to a tty using e.g. ctrl-alt-F1
startx -- :1 &
# or do this
xinit -- :1

# Check the web cam based on the device file
camorama -d /dev/video1

# Change default terminal emulator
sudo update-alternatives --config x-terminal-emulator

# Using globstar
shopt -s globstar
vim -p **/*.txt

# See which packages are using the most disk space.
dpkg-query -W --showformat='${Installed-Size} ${Package}\n' | sort -nr | less

# Using gcc (gnu c compiler) without a makefile (on the fly, so to speak)
gcc testing.c # compile c file into 'a.out' binary
gcc -Wall -o "testing" "testing.c" # compile into 'testing' binary and show warnings
gcc -Wall -o "testing" "testing.c" -lm # compile with math.h
gcc -Wall -o "testing" "testing.c" --llapack # compile with lapack

# Restrict locate to a single path
locate --count /home/nathaniel/*/Makefile

# use the recoll command from the terminal
recoll -t oatmeal | less -S
# Search for exact phrase.
recoll -t '"moved permanently"'
# Useful for timing queries.
time recoll -t '"moved permanently"'

# See ten newest processes
ps k-start_time
# See oldest processes first
ps axkstart_time | less
# See newest processes first
ps axk-start_time | less
ps --sort -start_time -ef | less

# Downloading flash videos
# Ohloh comparison:
# https://www.ohloh.net/p/compare?project_0=clive&project_1=cclive&project_2=youtube-dl
youtube-dl 'http://youtu.be/otXf1VukQkU' # lots of development activity
quvi 'http://youtu.be/otXf1VukQkU'   # quvi is a library that other languages can call, too
clive  'http://youtu.be/otXf1VukQkU' # stands for 'command live video extraction'
cclive 'http://youtu.be/otXf1VukQkU' # rewrite of clive in C++

# When gvfsd-metadata spazzes out on you, run this.
rm -rf ~/.local/share/gvfs-metadata
# This is a well-known bug.
# https://bugs.launchpad.net/ubuntu/+source/gvfs/+bug/517021
# http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=624507

# Searching for unicode characters.
charmap # nice gui, but more than I generally need
unicode beta # find all unicode characters with 'beta' in the name
unicode '.*greek.*small.*beta.*' | less # you can use regular expressions, too
unicode 'greek small letter beta' | less # gets one results
unicode -w 'greek small letter beta' | less # gets the wikipedia page about the unicode characters
# Upside down letters
unicode 'letter turned a'
# Superscripts
unicode  "modifier letter small a"
# Looking it up by character
unicode -i UTF-8 ╗
# Look it up by hex (UTF-16BE)
unicode -x 2557
unicode -x 002557
unicode U+2557
# Look it up by decimal number
unicode -d 9559
# Look it up by octal
unicode -o 22527
# Using `ga` in vim gives hex, decimal, and octal, useful for searching unicode(1).
# Using `g8` in vim gives UTF-8 representation, not useful for searching unicde (1).

# See who's been sshing into the machine lately.
sudo grep -i ssh /var/log/auth.log | less -S

# Goodness, am I in a shell launched by bash, or by sshd or something else?
echo $SHLVL # If this is 1, the shell was launched by a terminal, sshd, etc. If not, it was launched by another shell.
# Who is the parent process, anyway?
ps -p $PPID

# See the contents of a gzip'd file without creating a temp file.
zcat file.gz
# See paged contents of a gzip'd file without creating a temp file.
zless file.gz

# One way to re-run a process in gdb:
1. Look up the process with ps.
ps aux | grep comsol
1000     24466  0.0  0.0   2236   660 pts/9    S+   12:45   0:00 /bin/sh /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/comsol
1000     24497  106  3.8 820832 152864 pts/9   Sl+  12:45   0:12 /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsollauncher --launcher.ini /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsol.ini
2. Paste the corresponding command after gdb --args.
gdb --args /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsollauncher --launcher.ini /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsol.ini
3. Trouble is, anything set up by wrapper scripts won't work...

# Probably a better way to run a process in gdb.
1. Run the process.
2. Look up the process with ps.
ps aux | grep comsol
1000       503  7.7  4.4 853340 179816 pts/9   Sl+  12:55   0:19 /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsollauncher --launcher.ini /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsol.ini
3. Attach gdb to the process by process id (may need to be root).
sudo gdb /home/nathaniel/local_programs/COMSOL/COMSOL43b_install/COMSOL43b/bin/glnx86/comsollauncher 503
4. Once in gdb, press c to continue execution of program.

# Filter out control sequences like backspace, return, etc.
cat myfile.txt | col -b > filtered.txt

# List books in calibre library.
calibredb list --fields 'title,authors,size'
# Full documentation here:
# http://manual.calibre-ebook.com/cli/calibredb.html#calibredb-list

# Find out which Linux distribution you are running.
cat /etc/issue
# Find out which Debian/Ubuntu distribution you have installed.
lsb_release -a

# See one-letter macros definitions for LaTeX.
texdef -t latex a b c d e f g h i j k l m n o p q r s t u v x y z A B C D E F G H I J K L M N O P Q R S T U V X Y Z

# See all non-printing characters in a text file
cat -A myfile.txt

# See wifi network usage
vnstat -i wlan2
# See it updated every 2 seconds (by default)
watch vnstat -i wlan2

# Process files with spaces in the filenames
IFS=$'\n'
for file in *.txt ; do
    # commands on $file here
done
# Another option is to use find with --exec flag

# find duplicate files (assuming that identical file size means they're the same)
duff *
duff -r /path/to/directory
# find duplicate files (assuming that identical file sizes does not necessarily mean the same)
duff -t *
duff -rt /path/to/directory
# Other options:
fdupes
rdfind /path/to/directory

# Set the default Gnome browser
update-alternatives --config gnome-www-browser
# Default for foreign programs (system-wide)
update-alternatives --config x-www-browser

# Using make
# Ignore errors, just keep on trucking.
make -i
# Choose the directory to make into
make -C /path/to/directory
make --directory=/path/to/directory

gtk-redshift -l 41.9:-87.6 -t 5700:3600 -g 0.8 -m vidmode

# Lock the screen
xflock4

# Quick way to find process ids based on command name
pgrep cron
# See the full line, not just the id
pgrep -a vim
# Search the exact thing
pgrep -x bash

# Show version numbers with apt-get
sudo apt-get update -V
# get changelog (requires internet connection)
apt-get changelog git
# TODO: does this require you do apt-get first?

# See output
annotate-output

# Open emacs in the terminal instead of a separate window
emacs -nw
emacs --no-window-system

# Figure out your current DNS server
cat /etc/resolv.conf | grep nameserver
# Remove censorship of domains
nameserver 176.58.120.112

# Make a directory with the format yyyy-mm-dd of today's date
mkdir $(date -I)

# Make a popup message
gdialog --msgbox "Test"
kdialog --msgbox "Test"
# Make a popup message over SSH
export DISPLAY=:0.0 && gdialog --msgbox "Test"
# If you hit Ctrl-C, it stops (i.e. releases the terminal so you can type again) and disappears from the screen on the remote machine.
# If the user closes the box, does the same thing.
# If you're not sure which screen someone is connected to, use `w`
w
# This will show e.g. :0 :1. The dot part is the (optional) screen number, if the X-server is using multiple screens.
# http://unix.stackexchange.com/questions/17255/is-there-a-command-to-list-all-open-displays-on-a-machine
# You can also do obnoxious things like make the window bigger and add Pango markup to change font size and color.
zenity --warning --width=400 --height=400 --text='<span font="32" color="red">Look out!</span>'

# Launch a process while making it think that the date and time is different than it actually is.
faketime 'last Friday 5 pm' /bin/date
faketime '2008-12-24 08:15:42' /bin/date
datefudge "2007-04-01 10:23" date -R

# Some ipython tricks
# Save lines 1-7 and 10 to myfile.py
%save myfile 1-7 10
# Append lines 11-12
%save -a myfile 11-12

# Joke program to print dates in the Discordian calendar
# http://en.wikipedia.org/wiki/Discordian_calendar
ddate
# Joke message; spit out a random Discordian slogan.
ddate +%.

# Weborf web server as daemon
weborf --basedir ~/weborf/ --cache ~/Downloads/weborf-cache/ --noexec --mime -d

# See security updates
apt-get -s dist-upgrade |grep "^Inst" |grep -i securi

# Login with mobile shell
mosh username@remote.computer
# Login with a different port than the default (60000-61000)
mosh -p 53000 username@remote.computer

# Diff by word
wdiff a.txt b.txt
# Diff by word and suppress common words (useful for very long lines)
wdiff --no-common a.txt b.txt
wdiff -3 a.txt b.txt

# List all fonts
fc-list

# Copy SSH public key to clipboard
xclip -sel clip < ~/.ssh/id_rsa.pub

# How to ditch KDE completely
sudo apt-get purge kdelibs-bin kdelibs5-data

# Report a debian bug
reportbug
# Report a bug for a particular file
reportbug --filename /usr/share/xfce4/helpers/iceweasel.desktop
# Report a bug for a particular package
reportbug iceweasel
# Report a bug for a command in your path
reportbug --path --filename=cd
# Send kudos instead of reporting a bug
reportbug --kudos
# Report a bug with mutt (note that --attach will not transfer to mutt)
reportbug --mutt

# Notes on data entry to LibreOffice Calc
Ctrl-Shift-P toggle superscript
Ctrl-Shift-B toggle subscript
# Finding the rightmost and bottommost row/column containing data.
Ctrl-End
# Moves to A1 cell. (Not leftmost and topmost, which is kind of inconsistent.)
Ctrl-Home

# Entering unicode on Linux
# Insert ℃ (degrees Celsius)
Ctrl-Shift-U 2103 <Enter>
# Insert ° (degree symbol)
Ctrl-Shift-U b0 <Enter>
# Insert α (alpha)
Ctrl-Shift U 3b1 <Enter>
# Insert β (beta)
Ctrl-Shift U 3b2 <Enter>
# Insert ₂ 
Ctrl-Shift U 2082 <Enter>
# Insert ® (registered trademark sign)
Ctrl-Shift U ae <Enter>

# Using zsync for downloads
zsync http://releases.ubuntu.com/12.04.4/ubuntu-12.04.4-desktop-i386.iso.zsync
# Do not do this! It will download the entire iso and then tell you it is a zsync file
zsync http://releases.ubuntu.com/12.04.4/ubuntu-12.04.4-desktop-i386.iso

# Using the venerable bc command
echo '1 + 2' | bc
# Using the even more venerable dc command
echo '1 2 + p' | dc

# A simple stopwatch; press Ctrl-C or Ctrl-D to end.
time cat
# http://lifehacker.com/285093/turn-the-terminal-into-a-stopwatch-with-time-cat
# An even simple stopwatch; press enter or Ctrl-D to end
time read
# http://www.commandlinefu.com/commands/view/1567/a-very-simple-and-useful-stopwatch
# Press any key to stop the watch
time read -sn1

# Getting help about bash builtins like read, cd, echo, printf, and type
# (they don't have man pages of their own, and the bash man page is way too long to sift through)
help read | less
help cd | less

# See when the last apt-get update was
stat -c %y /var/lib/apt/periodic/update-success-stamp
# more reliable check of date/time of last update
stat -c %y /var/cache/apt/pkgcache.bin
# or even
stat /var/cache/apt/

# Do speech to text
# Convert to 16khz 16bit mono wav file
ffmpeg -i file.mp3 -ar 16000 -ac 1 file.wav
# Convert the wavefile to text
pocketsphinx_continuous -infile file.wav > file.txt

# Gnuplot png output
set term png # or pngcairo
set output "out.png"
plot x**2
set term wxt

# Seeing the changes in a package before updating
apt-get install apt-listchanges
sudo dpkg-reconfigure apt-listchanges
# See bugs in a package before updating
apt-get install apt-listbugs

# Use imagemagick to find out information about several files
identify *.jpg
# Use imagemagick to convert png to jpeg
convert file.png file.jpeg
# Use imagemagick to clean up a whiteboard picture
# https://gist.github.com/lelandbatey/8677901
convert $1 -morphology Convolve DoG:15,100,0 -negate -normalize -blur 0x1 -channel RBG -level 60%,91%,0.1 $2

# restart xfce4 panels
xfce4-panel -r

# see status of dropbox daemon
dropbox status

# Copy contents of subversion repository into current directory
svn co svn://anonscm.debian.org/debichem/unstable/gelemental/ ./

# Set the screen brightness (backlight) from the command light
xbacklight -set 100

# gnuplot command we typically use at the beamline
gnuplot> plot "smx.001" u 1:(log($2/$3)) w lp
# Keep up gnuplot with shell after running a script
gnuplot script.gnuplot -

# Ways to prevent a package from being installed
Synaptic -> Package -> Lock version.
sudo apt-mark hold package-name
echo package-name hold | sudo dpkg --set-selections
# For aptitude only
sudo aptitude hold package-name

# Install a specific package version
sudo apt-get install iceweasel=30.0~b5-2

# See installed linux kernel package
apt-cache policy linux-headers-$(uname -r)

# Get a new ip address via DHCP.
sudo dhclient -r eth0
# http://serverfault.com/questions/42799/how-to-force-linux-to-reacquire-a-new-ip-address-from-the-dhcp-server

# Check if a LaTeX package is installed
kpsewhich tengwarscript.sty
# Local LaTeX folder
kpsewhich -var-value TEXMFHOME
# LaTeX paths
kpsexpand '$TEXMF'

# Run as sudo with a graphical password entry rather than typing password into terminal.
# (Useful when launching a graphical program without the ability to type into a terminal.)
gksudo synaptic

# Set default browser
update-alternatives --config x-www-browser

# Open manpage html page in chromium browser.
man --html=/usr/bin/chromium man
# Open manpage html page in default browser.
man --html=x-www-browser man

# Convert Excel file (xls) to CSV
ssconvert -O 'separator=;' my-spreadsheet.xls out.csv

# Convert all docx to pdf with libreoffice from the command line
libreoffice --headless --convert-to pdf *.docx

# Show ascii keycodes; press Ctrl-D to end.
showkey -a
showkey --ascii
# Similar to just running
cat
# and looking at output
# Show keycodes, including when key is released. Wait ten seconds for it to end.
# Must be run in a virtual tty, not a graphical terminal, otherwise it will say:
# "Couldn't get a file descriptor referring to the console"
showkey

# Disable IPv6
# http://superuser.com/questions/575684/how-to-disable-ipv6-on-a-specific-interface-in-linux
# https://wiki.debian.org/DebianIPv6
# http://mindref.blogspot.com/2010/12/debian-disable-ipv6_22.html
# First, comment out /etc/hosts ipv6 stuff
# Then do
use-ipv6=no
# in /etc/avahi/avahi-daemon.conf
# Next, in /etc/sysctl.conf
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1
net.ipv6.conf.eth0.disable_ipv6 = 1
# Restart stuff.
sudo sysctl -p
# To check what's using IPv6
sudo netstat -tunlp | grep p6
# More certain way that requires reboot.
echo 'blacklist ipv6' >> /etc/modprobe.d/blacklist
# Reboot and check
cat /proc/net/if_inet6
modprobe ipv6
lsmod | grep ipv6
# Run this also
# http://wiki.centos.org/FAQ/CentOS5#head-47912ebdae3b5ac10ff76053ef057c366b421dc4
touch /etc/modprobe.d/disable-ipv6.conf
echo "install ipv6 /bin/true" >> /etc/modprobe.d/disable-ipv6.conf 
# Also
sudo vim /etc/netconfig
# comment out lines starting with:
udp6
tcp6
# also this
sudo vim /etc/default/grub

GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1 quiet"
# and this
# http://www.evsmisc.info/linux/mind-reference-how-to-disable-ipv6-in-debian.html
# another way to check
# http://ubuntu-tutorials.com/2008/01/12/disabling-ssh-connections-on-ipv6/

# to check it actually disabled
dmesg | grep -i ipv6
lsmod | grep -i ipv6

sudo sysctl -w net.ipv6.conf.eth0.autoconf=0

# Add google's public gpg keys for installing their software
wget -q -O - http://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -

# Change your MAC address (i.e. hardware address)
sudo macchanger --mac 12:34:56:78:91:01 eth0
# Note that this won't change your IP address until you disconnect and reconnect.

# TODO: learn how to recover deleted files on a Linux filesystem.
# TODO: running a script on startup, shutdown, wake from suspend, etc.
http://www.linuxquestions.org/questions/slackware-14/how-to-run-a-script-on-wake-up-from-sleep-state-940311/
    When the computer wakes up from hibernate or suspend all scripts in
    /etc/pm/sleep.d are called in reversed order with the argument "thaw" or "resume".
    
    Just put something like
    Code:
    #!/bin/sh
    case "$1" in
        thaw|resume)
            yourscript.sh
            ;;
    esac
    in /etc/pm/sleep.d and you should be fine.

For more information see man pm-action.


# open a file; desktop-independent command
xdg-open
# equivalent desktop-specific commands:
gnome-open
kde-open
exo-open

# See what syscalls a program makes, what files it reads, 
strace echo "Hello."
# Attach strace to a running process. Useful for e.g. seeing if a process is respoding,
# and sending kill signals and seeing if it gets them.
strace -p 2792
# Put the strace log in a file.
strace -o /tmp/strace.log ls
# See profiling information (what is this process spending time doing?)
strace -c /bin/foo

# http://www.cyberciti.biz/tips/linux-strace-command-examples.html
# http://www.hokstad.com/5-simple-ways-to-troubleshoot-using-strace

# Using wine.
wine program.exe
# Debugging wine.
winedbg program.exe
# Uninstalling wine software.
wine uninstaller

TODO: how to run `sudo time updatedb`? `time sudo updatedb` doesn't work either.
